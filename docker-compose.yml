version: '3.8'

services:
  # PostgreSQL Database for Authentication
  postgres:
    image: postgres:15-alpine
    container_name: cse-explorer-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=cse_user
      - POSTGRES_PASSWORD=cse_password
      - POSTGRES_DB=cse_explorer_auth
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cse-explorer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cse_user -d cse_explorer_auth"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Graph Database Service
  graph-db:
    build:
      context: ./Graph_Database_Service
      dockerfile: Dockerfile
    container_name: cse-explorer-graph-db
    ports:
      - "7474:7474"  # Neo4j HTTP (browser access only)
      - "7687:7687"  # Neo4j Bolt (database connections)
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_security_procedures_unrestricted=gds.*,apoc.*
      - NEO4J_dbms_security_procedures_allowlist=gds.*,apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - cse-explorer-network
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "password", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # # Data Pipeline Service
  # data-pipeline:
  #   build:
  #     context: ./Data pipeline
  #     dockerfile: Dockerfile
  #   container_name: cse-explorer-data-pipeline
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - graph-db
  #   environment:
  #     - NEO4J_URI=bolt://graph-db:7687
  #     - NEO4J_USER=neo4j
  #     - NEO4J_PASSWORD=password
  #   networks:
  #     - cse-explorer-network

  # RAG Service
  rag-service:
    build:
      context: ./RAG
      dockerfile: Dockerfile
    container_name: cse-explorer-rag
    ports:
      - "8002:8002"
    depends_on:
      - graph-db
    environment:
      - NEO4J_URI=bolt://graph-db:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    networks:
      - cse-explorer-network

  # Natural Language Agent Service
  nl-agent:
    build:
      context: ./Natural Language Agent
      dockerfile: Dockerfile
    container_name: cse-explorer-nl-agent
    ports:
      - "8001:8001"
    depends_on:
      - graph-db
      - rag-service
    environment:
      - NEO4J_URI=bolt://graph-db:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - RAG_SERVICE_URL=http://rag-service:8002
    networks:
      - cse-explorer-network

  # Graph Backend (internal only, hidden behind API Gateway)
  graph-backend:
    build:
      context: ./Graph Backend
      dockerfile: Dockerfile
    container_name: cse-explorer-graph-backend
    expose:
      - "8003"   # expose only inside Docker network
    depends_on:
      - graph-db
    environment:
      - NEO4J_URI=bolt://graph-db:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    networks:
      - cse-explorer-network

  # API Gateway Service
  api-gateway:
    build:
      context: ./API Gateway
      dockerfile: Dockerfile
    container_name: cse-explorer-api-gateway
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      nl-agent:
        condition: service_started
      rag-service:
        condition: service_started
      data-pipeline:
        condition: service_started
      graph-backend:
        condition: service_started
    environment:
      # Database Configuration
      - DATABASE_URL=postgresql://cse_user:cse_password@postgres:5432/cse_explorer_auth
      - POSTGRES_USER=cse_user
      - POSTGRES_PASSWORD=cse_password
      - POSTGRES_DB=cse_explorer_auth
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      # JWT Configuration
      - JWT_SECRET_KEY=super-secret-jwt-key-change-this-in-production-cse-explorer-2024
      - JWT_ALGORITHM=HS256
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
      - JWT_REFRESH_TOKEN_EXPIRE_DAYS=7
      # Development Configuration (set to false for production)
      - DEVELOPMENT_MODE=false
      # Service URLs (internal, behind gateway)
      - NL_AGENT_URL=http://nl-agent:8001
      - RAG_SERVICE_URL=http://rag-service:8002
      - DATA_PIPELINE_URL=http://data-pipeline:8000
      - GRAPH_BACKEND_URL=http://graph-backend:8003
      # API Configuration
      - API_HOST=0.0.0.0
      - API_PORT=8080
      - API_RELOAD=false
    networks:
      - cse-explorer-network

  # Frontend Service
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: cse-explorer-frontend
    ports:
      - "3000:3000"
    depends_on:
      - api-gateway
    environment:
      - VITE_API_URL=http://api-gateway:8080
    networks:
      - cse-explorer-network

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:

networks:
  cse-explorer-network:
    driver: bridge